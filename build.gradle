plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+mc${project.minecraft_version}${getCheckedOutGitCommitHash()}"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

static def getCheckedOutGitCommitHash() {
    String commit = 'git rev-parse --verify --short HEAD'.execute().text.trim()
    if (commit.size() > 0) {
        return "-" + commit;
    } else {
        return "";
    }
}

repositories {
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url "https://maven.isxander.dev/releases" }
}

loom {
    runs {
        remove server
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    // Fabric API - Needs to be specified, otherwise an older version might be defaulted and cause issues.
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    // YACL
    modImplementation("dev.isxander:yet-another-config-lib:${project.yacl_version}")

    // Mod Menu
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude group: 'net.fabricmc.fabric-api'
    }
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    archivesBaseName = project.archives_base_name
    withSourcesJar()
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
    }
}